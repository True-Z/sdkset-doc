import{_ as e,o,c as t,Q as a}from"./chunks/framework.5be90078.js";const _=JSON.parse('{"title":"Interface: CreateWebSocketOption","description":"","frontmatter":{},"headers":[],"relativePath":"dist/interfaces/core_useWebSocket.CreateWebSocketOption.md","filePath":"dist/interfaces/core_useWebSocket.CreateWebSocketOption.md","lastUpdated":null}'),r={name:"dist/interfaces/core_useWebSocket.CreateWebSocketOption.md"},c=a('<h1 id="interface-createwebsocketoption" tabindex="-1">Interface: CreateWebSocketOption <a class="header-anchor" href="#interface-createwebsocketoption" aria-label="Permalink to &quot;Interface: CreateWebSocketOption&quot;">​</a></h1><p><a href="./../modules/core_useWebSocket.html">core/useWebSocket</a>.CreateWebSocketOption</p><p>包装器选项。</p><h2 id="hierarchy" tabindex="-1">Hierarchy <a class="header-anchor" href="#hierarchy" aria-label="Permalink to &quot;Hierarchy&quot;">​</a></h2><ul><li><p><a href="./types.Dictionary.html"><code>Dictionary</code></a></p><p>↳ <strong><code>CreateWebSocketOption</code></strong></p></li></ul><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="autoreconnect" tabindex="-1">autoReconnect <a class="header-anchor" href="#autoreconnect" aria-label="Permalink to &quot;autoReconnect&quot;">​</a></h3><p>• <code>Optional</code> <strong>autoReconnect</strong>: <code>boolean</code> | { <code>delay?</code>: <code>number</code> ; <code>retries?</code>: <code>number</code> }</p><p>重连配置。</p><hr><h3 id="heartbeat" tabindex="-1">heartbeat <a class="header-anchor" href="#heartbeat" aria-label="Permalink to &quot;heartbeat&quot;">​</a></h3><p>• <code>Optional</code> <strong>heartbeat</strong>: <code>boolean</code> | { <code>interval?</code>: <code>number</code> ; <code>message?</code>: <code>string</code> | <code>ArrayBuffer</code> | <code>Blob</code> }</p><p>心跳配置。</p><hr><h3 id="interceptor" tabindex="-1">interceptor <a class="header-anchor" href="#interceptor" aria-label="Permalink to &quot;interceptor&quot;">​</a></h3><p>• <code>Optional</code> <strong>interceptor</strong>: <a href="./core_useWebSocket.WebSocketInterceptor.html"><code>WebSocketInterceptor</code></a></p><p>拦截器对象。</p><hr><h3 id="params" tabindex="-1">params <a class="header-anchor" href="#params" aria-label="Permalink to &quot;params&quot;">​</a></h3><p>• <code>Optional</code> <strong>params</strong>: <a href="./../modules/types.html#collection"><code>Collection</code></a></p><p>请求参数。</p><hr><h3 id="protocols" tabindex="-1">protocols <a class="header-anchor" href="#protocols" aria-label="Permalink to &quot;protocols&quot;">​</a></h3><p>• <code>Optional</code> <strong>protocols</strong>: <code>string</code> | <code>string</code>[]</p><p>协议字符串 or 包含协议字符串的数组。</p>',25),n=[c];function i(d,s,p,l,h,b){return o(),t("div",null,n)}const m=e(r,[["render",i]]);export{_ as __pageData,m as default};
