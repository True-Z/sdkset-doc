import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.5be90078.js";const x=JSON.parse('{"title":"Module: core/useAxios","description":"","frontmatter":{"prev":{"text":"useDayjs（时间）","link":"dist/modules/core_useDayjs"},"next":{"text":"useWebSocket（socket）","link":"dist/modules/core_useWebSocket"}},"headers":[],"relativePath":"dist/modules/core_useAxios.md","filePath":"dist/modules/core_useAxios.md","lastUpdated":null}'),o={name:"dist/modules/core_useAxios.md"},l=e(`<h1 id="module-core-useaxios" tabindex="-1">Module: core/useAxios <a class="header-anchor" href="#module-core-useaxios" aria-label="Permalink to &quot;Module: core/useAxios&quot;">​</a></h1><h2 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h2><ul><li><a href="./../classes/core_useAxios.WrapperAxios.html">WrapperAxios</a></li></ul><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h2><ul><li><a href="./../interfaces/core_useAxios.AxiosInterceptor.html">AxiosInterceptor</a></li><li><a href="./../interfaces/core_useAxios.CreateAxiosOption.html">CreateAxiosOption</a></li></ul><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="useaxios" tabindex="-1">useAxios <a class="header-anchor" href="#useaxios" aria-label="Permalink to &quot;useAxios&quot;">​</a></h3><p>▸ <strong>useAxios</strong>&lt;<code>T</code>&gt;(<code>axiosInstance</code>, <code>option?</code>): <a href="./../classes/core_useAxios.WrapperAxios.html"><code>WrapperAxios</code></a>&lt;<code>T</code>&gt;</p><p>返回一个<a href="https://www.axios-http.cn/" target="_blank" rel="noreferrer">axios</a>包装器对象。 包装器对<code>axios.get</code>调用方式进行了简化。 使用<code>TypeScript</code>时，可以通过传递泛型参数控制请求<code>config</code>对象类型。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> { CreateAxiosDefaults } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;axios&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> { AxiosInterceptor } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@sdkset/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RequestConfig</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AxiosRequestConfig</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">custom</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">noNeedToken</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">axiosInstance</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> axios.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">({ </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">interceptor</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AxiosInterceptor</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">axios</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">useAxios</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">RequestConfig</span><span style="color:#E1E4E8;">&gt;(axiosInstance, { interceptor })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> axios.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;url&#39;</span><span style="color:#E1E4E8;">, { </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;"> }, config)</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> response</span><span style="color:#F97583;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">type</span><span style="color:#24292E;"> { CreateAxiosDefaults } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;axios&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">type</span><span style="color:#24292E;"> { AxiosInterceptor } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@sdkset/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RequestConfig</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AxiosRequestConfig</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">custom</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">noNeedToken</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">axiosInstance</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> axios.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">({ </span><span style="color:#D73A49;">...</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">interceptor</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AxiosInterceptor</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#D73A49;">...</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">axios</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useAxios</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">RequestConfig</span><span style="color:#24292E;">&gt;(axiosInstance, { interceptor })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> axios.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;url&#39;</span><span style="color:#24292E;">, { </span><span style="color:#D73A49;">...</span><span style="color:#24292E;"> }, config)</span></span>
<span class="line"><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> response</span><span style="color:#D73A49;">...</span></span></code></pre></div><p><strong><code>Default</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">useAxios</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  config: {}, </span><span style="color:#6A737D;">// 创建配置对象</span></span>
<span class="line"><span style="color:#E1E4E8;">  interceptor: {} </span><span style="color:#6A737D;">// 拦截器对象</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">useAxios</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  config: {}, </span><span style="color:#6A737D;">// 创建配置对象</span></span>
<span class="line"><span style="color:#24292E;">  interceptor: {} </span><span style="color:#6A737D;">// 拦截器对象</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>axiosInstance</code></td><td style="text-align:left;"><code>AxiosInstance</code></td><td style="text-align:left;">axios 实例</td></tr><tr><td style="text-align:left;"><code>option?</code></td><td style="text-align:left;"><a href="./../interfaces/core_useAxios.CreateAxiosOption.html"><code>CreateAxiosOption</code></a></td><td style="text-align:left;">包装器选项</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../classes/core_useAxios.WrapperAxios.html"><code>WrapperAxios</code></a>&lt;<code>T</code>&gt;</p>`,19),p=[l];function t(c,r,i,y,E,d){return a(),n("div",null,p)}const h=s(o,[["render",t]]);export{x as __pageData,h as default};
