import{_ as s,o as a,c as e,Q as o}from"./chunks/framework.5be90078.js";const u=JSON.parse('{"title":"Module: core/useStorage","description":"","frontmatter":{"prev":{"text":"工具（utility）","link":"dist/modules/utils_src_modules___indexUtility"},"next":{"text":"useLocalStorage（本地）","link":"dist/modules/core_useLocalStorage"}},"headers":[],"relativePath":"dist/modules/core_useStorage.md","filePath":"dist/modules/core_useStorage.md","lastUpdated":null}'),n={name:"dist/modules/core_useStorage.md"},l=o(`<h1 id="module-core-usestorage" tabindex="-1">Module: core/useStorage <a class="header-anchor" href="#module-core-usestorage" aria-label="Permalink to &quot;Module: core/useStorage&quot;">​</a></h1><h2 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h2><ul><li><a href="./../classes/core_useStorage.WrapperStorage.html">WrapperStorage</a></li></ul><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h2><ul><li><a href="./../interfaces/core_useStorage.CreateStorageOption.html">CreateStorageOption</a></li><li><a href="./../interfaces/core_useStorage.StorageFormat.html">StorageFormat</a></li></ul><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="storageproperty" tabindex="-1">StorageProperty <a class="header-anchor" href="#storageproperty" aria-label="Permalink to &quot;StorageProperty&quot;">​</a></h3><p>Ƭ <strong>StorageProperty</strong>: keyof <a href="./../interfaces/core_useStorage.StorageFormat.html"><code>StorageFormat</code></a></p><p>存储数据属性。</p><hr><h3 id="storagetype" tabindex="-1">StorageType <a class="header-anchor" href="#storagetype" aria-label="Permalink to &quot;StorageType&quot;">​</a></h3><p>Ƭ <strong>StorageType</strong>: <code>&quot;localStorage&quot;</code> | <code>&quot;sessionStorage&quot;</code></p><p>存储类型。</p><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="usestorage" tabindex="-1">useStorage <a class="header-anchor" href="#usestorage" aria-label="Permalink to &quot;useStorage&quot;">​</a></h3><p>▸ <strong>useStorage</strong>(<code>storageType?</code>, <code>option?</code>): <a href="./../classes/core_useStorage.WrapperStorage.html"><code>WrapperStorage</code></a></p><p>返回一个<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Storage" target="_blank" rel="noreferrer">Storage</a>包装器对象。 包装器对<code>Storage</code>使用方式进行了简化并支持设置过期时间。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">storage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">useStorage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;localStorage&#39;</span><span style="color:#E1E4E8;">, { expireTimeMs: </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">storage.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;key&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;value&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">storage.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;key&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;value&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">storage.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;unknown&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;defValue&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;defValue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">storage.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;key&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">storage.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;key&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;"> days later </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">storage.</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;key&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">storage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">useStorage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;localStorage&#39;</span><span style="color:#24292E;">, { expireTimeMs: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">24</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">storage.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;key&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;value&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">storage.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;key&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;value&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">storage.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;unknown&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;defValue&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;defValue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">storage.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;key&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">storage.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;key&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">30</span><span style="color:#24292E;"> days later </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">storage.</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;key&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span></span></code></pre></div><p><strong><code>Default</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">useStorage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;localStorage&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">  expireTime: </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 默认过期时间毫秒数</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">useStorage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;localStorage&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">  expireTime: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">24</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 默认过期时间毫秒数</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>storageType?</code></td><td style="text-align:left;"><a href="./core_useStorage.html#storagetype"><code>StorageType</code></a></td><td style="text-align:left;">存储类型</td></tr><tr><td style="text-align:left;"><code>option?</code></td><td style="text-align:left;"><a href="./../interfaces/core_useStorage.CreateStorageOption.html"><code>CreateStorageOption</code></a></td><td style="text-align:left;">包装器选项</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../classes/core_useStorage.WrapperStorage.html"><code>WrapperStorage</code></a></p>`,25),p=[l];function t(r,c,y,E,i,d){return a(),e("div",null,p)}const F=s(n,[["render",t]]);export{u as __pageData,F as default};
