import{_ as e,o as s,c as a,Q as t}from"./chunks/framework.5be90078.js";const u=JSON.parse('{"title":"Class: WrapperObserver","description":"","frontmatter":{},"headers":[],"relativePath":"dist/classes/mode_useObserver.WrapperObserver.md","filePath":"dist/classes/mode_useObserver.WrapperObserver.md","lastUpdated":null}'),n={name:"dist/classes/mode_useObserver.WrapperObserver.md"},o=t(`<h1 id="class-wrapperobserver" tabindex="-1">Class: WrapperObserver <a class="header-anchor" href="#class-wrapperobserver" aria-label="Permalink to &quot;Class: WrapperObserver&quot;">​</a></h1><p><a href="./../modules/mode_useObserver.html">mode/useObserver</a>.WrapperObserver</p><p>包装器类。</p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <strong>new WrapperObserver</strong>()</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="eventchannel" tabindex="-1">#eventChannel <a class="header-anchor" href="#eventchannel" aria-label="Permalink to &quot;#eventChannel&quot;">​</a></h3><p>• <code>Private</code> <strong>#eventChannel</strong>: <a href="./../interfaces/types.Dictionary.html"><code>Dictionary</code></a>&lt;<a href="./../interfaces/types.Func.html"><code>Func</code></a>&lt;<code>any</code>&gt;[]&gt;</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="emit" tabindex="-1">emit <a class="header-anchor" href="#emit" aria-label="Permalink to &quot;emit&quot;">​</a></h3><p>▸ <strong>emit</strong>(<code>event</code>, <code>...params</code>): <code>void</code></p><p>发布特定事件，触发相应订阅回调。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">observer.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;open&#39;</span><span style="color:#E1E4E8;">, func)</span></span>
<span class="line"><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">observer.</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;open&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">func</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">observer.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;open&#39;</span><span style="color:#24292E;">, func)</span></span>
<span class="line"><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">observer.</span><span style="color:#6F42C1;">emit</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;open&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">func</span><span style="color:#24292E;">()</span></span></code></pre></div><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>event</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">事件名称</td></tr><tr><td style="text-align:left;"><code>...params</code></td><td style="text-align:left;"><code>unknown</code>[]</td><td style="text-align:left;">回调参数</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="off" tabindex="-1">off <a class="header-anchor" href="#off" aria-label="Permalink to &quot;off&quot;">​</a></h3><p>▸ <strong>off</strong>(<code>...event</code>): <code>void</code></p><p>取消订阅特定事件，没有传递<code>event</code>参数则取消全部。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">observer.</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;open&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">func</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">observer.</span><span style="color:#B392F0;">off</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;open&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">observer.</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;open&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> No operation</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">observer.</span><span style="color:#6F42C1;">emit</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;open&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">func</span><span style="color:#24292E;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">observer.</span><span style="color:#6F42C1;">off</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;open&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">observer.</span><span style="color:#6F42C1;">emit</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;open&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> No operation</span></span></code></pre></div><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...event</code></td><td style="text-align:left;"><code>string</code>[]</td><td style="text-align:left;">事件名或事件名组成的数组</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="on" tabindex="-1">on <a class="header-anchor" href="#on" aria-label="Permalink to &quot;on&quot;">​</a></h3><p>▸ <strong>on</strong>(<code>event</code>, <code>callback</code>): <code>void</code></p><p>订阅特定事件，待特定事件发布时触发相应订阅的回调。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">observer.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;open&#39;</span><span style="color:#E1E4E8;">, func)</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> eventChannel </span><span style="color:#9ECBFF;">&#39;open&#39;</span><span style="color:#E1E4E8;"> event append func</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">observer.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;open&#39;</span><span style="color:#24292E;">, func)</span></span>
<span class="line"><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> eventChannel </span><span style="color:#032F62;">&#39;open&#39;</span><span style="color:#24292E;"> event append func</span></span></code></pre></div><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>event</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">事件名称</td></tr><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><a href="./../interfaces/types.Func.html"><code>Func</code></a>&lt;<code>any</code>&gt;</td><td style="text-align:left;">订阅回调</td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="once" tabindex="-1">once <a class="header-anchor" href="#once" aria-label="Permalink to &quot;once&quot;">​</a></h3><p>▸ <strong>once</strong>(<code>event</code>, <code>callback</code>): <code>void</code></p><p>订阅特定事件，待特定事件发布时触发一次相应订阅的回调。</p><p><strong><code>Example</code></strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">observer.</span><span style="color:#B392F0;">once</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;open&#39;</span><span style="color:#E1E4E8;">, func)</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> eventCenter </span><span style="color:#9ECBFF;">&#39;open&#39;</span><span style="color:#E1E4E8;"> event append func</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">observer.</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;open&#39;</span><span style="color:#E1E4E8;">, func)</span></span>
<span class="line"><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> No operation</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">observer.</span><span style="color:#6F42C1;">once</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;open&#39;</span><span style="color:#24292E;">, func)</span></span>
<span class="line"><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> eventCenter </span><span style="color:#032F62;">&#39;open&#39;</span><span style="color:#24292E;"> event append func</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">observer.</span><span style="color:#6F42C1;">emit</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;open&#39;</span><span style="color:#24292E;">, func)</span></span>
<span class="line"><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> No operation</span></span></code></pre></div><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>event</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">事件名称</td></tr><tr><td style="text-align:left;"><code>callback</code></td><td style="text-align:left;"><a href="./../interfaces/types.Func.html"><code>Func</code></a>&lt;<code>any</code>&gt;</td><td style="text-align:left;">订阅回调</td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p>`,49),l=[o];function p(r,c,d,i,y,h){return s(),a("div",null,l)}const b=e(n,[["render",p]]);export{u as __pageData,b as default};
